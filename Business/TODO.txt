Error/Empty stream handling (maybe with alternative source reference)
Handle timeout
Retry policy
Check we use cold or hot publisher
Cancel subscription (close socket) when no subscribers left
Use replay for caching old data (e.g. previous 5, for future aggregation)

Store historical data in influx db (store in bathes)


Tasks:
Implement gRPC API
- streaming the stock prices changes in real-time
	specify time interval
- streaming notifications when price trend changes (include a set of news that might impact price changes based on user's preferences)
	specify user id
- * rpcs to register user and his preferences about stocks he wanna track, and a set of tags for which news has to be looked for
	registration: username, password
	login: username, password
	basic auth? jwt token?
	update user preferences: company names to track, their news tags
- users reconnect manually if subscription was abandoned
Business logic
- stock service
	connects to finance client
	maps data to time series format
- news service
	connects to twitter client
	filters news by specified tags and company
	maps them to our format
- stock prices subsription service
	stores subscribers info
	stores active streams
	subscribes new subscriber to stream of its company (publish/connect)
	adds messages filtering for each subscriber based on time range
	monitors price change raises events (that will be handled by another observable)
API Clients
- yahoo finance api client that polls data every period of time
- twitter api client (not sure if it has http or websocket api) that collects news info
Persistence
- * ef repository to store user data and preferences
- * influxdb repository to store stock time series historical data
Sample client
- primitive client to call grpc api and show our server works
- * display time series data as chart